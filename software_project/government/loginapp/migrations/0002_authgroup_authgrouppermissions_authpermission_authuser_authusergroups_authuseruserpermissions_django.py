# Generated by Django 2.0 on 2019-10-23 09:06

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('loginapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lifedata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_property_name', models.TextField(blank=True, db_column='EVENT_PROPERTY_NAME', null=True)),
                ('event_type_id', models.IntegerField(blank=True, db_column='EVENT_TYPE_ID', null=True)),
                ('event_type_name', models.TextField(blank=True, db_column='EVENT_TYPE_NAME', null=True)),
                ('event_src_name', models.TextField(blank=True, db_column='EVENT_SRC_NAME', null=True)),
                ('district_id', models.IntegerField(blank=True, db_column='DISTRICT_ID', null=True)),
                ('intime_archive_num', models.IntegerField(blank=True, db_column='INTIME_ARCHIVE_NUM', null=True)),
                ('sub_type_id', models.IntegerField(blank=True, db_column='SUB_TYPE_ID', null=True)),
                ('district_name', models.TextField(blank=True, db_column='DISTRICT_NAME', null=True)),
                ('community_id', models.IntegerField(blank=True, db_column='COMMUNITY_ID', null=True)),
                ('rec_id', models.IntegerField(blank=True, db_column='REC_ID', null=True)),
                ('street_id', models.IntegerField(blank=True, db_column='STREET_ID', null=True)),
                ('overtime_archive_num', models.IntegerField(blank=True, db_column='OVERTIME_ARCHIVE_NUM', null=True)),
                ('operate_num', models.IntegerField(blank=True, db_column='OPERATE_NUM', null=True)),
                ('dispose_unit_id', models.IntegerField(blank=True, db_column='DISPOSE_UNIT_ID', null=True)),
                ('street_name', models.TextField(blank=True, db_column='STREET_NAME', null=True)),
                ('create_time', models.TextField(blank=True, db_column='CREATE_TIME', null=True)),
                ('event_src_id', models.IntegerField(blank=True, db_column='EVENT_SRC_ID', null=True)),
                ('intime_to_archive_num', models.IntegerField(blank=True, db_column='INTIME_TO_ARCHIVE_NUM', null=True)),
                ('sub_type_name', models.TextField(blank=True, db_column='SUB_TYPE_NAME', null=True)),
                ('event_property_id', models.IntegerField(blank=True, db_column='EVENT_PROPERTY_ID', null=True)),
                ('occur_place', models.TextField(blank=True, db_column='OCCUR_PLACE', null=True)),
                ('community_name', models.TextField(blank=True, db_column='COMMUNITY_NAME', null=True)),
                ('dispose_unit_name', models.TextField(blank=True, db_column='DISPOSE_UNIT_NAME', null=True)),
                ('main_type_name', models.TextField(blank=True, db_column='MAIN_TYPE_NAME', null=True)),
                ('main_type_id', models.IntegerField(blank=True, db_column='MAIN_TYPE_ID', null=True)),
            ],
            options={
                'db_table': 'lifedata',
                'managed': False,
            },
        ),
    ]
